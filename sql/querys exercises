SELECT * FROM movies_db.movies;
SELECT first_name, last_name, rating FROM movies_db.actors;
SELECT title as Titulo FROM movies_db.series;
SELECT first_name, last_name FROM movies_db.actors as ma WHERE ma.rating > 7.5;
SELECT title, rating FROM movies_db.movies as mv WHERE mv.rating > 7.5 AND mv.awards > 2;
SELECT title, rating FROM movies_db.movies ORDER BY rating;
SELECT title FROM movies_db.movies LIMIT 3;
SELECT * FROM movies_db.movies ORDER BY rating DESC LIMIT 5;
SELECT * FROM movies_db.actors LIMIT 10;
SELECT title, rating FROM movies_db.movies WHERE title = "Toy Story";
SELECT * FROM movies_db.actors WHERE first_name LIKE 'Sam%';
SELECT title FROM movies_db.movies WHERE release_date BETWEEN "2004-01-01" AND "2008-01-01";
SELECT title FROM movies_db.movies WHERE rating > 3 AND awards > 1 AND release_date BETWEEN "1988-01-01" AND "2009-01-01" ORDER BY rating;

//////////

SELECT m.title, g.name FROM movies as m INNER JOIN genres g ON m.genre_id = g.id;
SELECT e.title, a.first_name, a.last_name FROM actor_episode INNER JOIN episodes e ON actor_episode.episode_id = e.id INNER JOIN actors as a ON actor_episode.actor_id = a.id;
SELECT series.title, COUNT(s.serie_id) as total_seasons FROM series INNER JOIN seasons s ON series.id = s.serie_id GROUP BY (s.serie_id);
SELECT g.name, COUNT(m.genre_id) as quantity FROM genres as g INNER JOIN movies as m ON g.id = m.genre_id GROUP BY(m.genre_id) HAVING quantity >= 3;  
SELECT a.first_name, a.last_name FROM actors as a INNER JOIN actor_movie ON a.id = actor_movie.actor_id INNER JOIN movies ON actor_movie.movie_id = movies.id WHERE movies.title LIKE "La Guerra de las galaxias: %”;

//////////

SELECT e.nombre, e.puesto, d.localidad FROM empleado as e INNER JOIN departamento ON e.depto_nro = d.depto_nro WHERE e.puesto = “Desarrollador”;
SELECT COUNT(e.depto_nro) as total FROM empleado e INNER JOIN departamento d ON e.depto_nro = d.depto_nro GROUP BY (e.depto_nro) HAVING total > 5;
SELECT e.nombre, e.salario, d.nombre_depto FROM empleados e INNER JOIN departamento d ON e.depto_nro = d.depto_nro WHERE e.puesto = “Presidente”;
SELECT * FROM empleado INNER JOIN departamento ON empleado.depto_nro = departamento.depto_nro WHERE departamento.nombre_depto = “Contabilidad” ORDER BY empleado.nombre;
SELECT e.nombre FROM empleado as e WHERE e.salario = (
	SELECT MIN(empleado.salario) FROM empleado;
); 
SELECT MAX(empleado.salario) FROM empleado INNER JOIN departamento ON empleado.depto_nro = departamento.depto_nro WHERE departamento.nombre_depto = “Ventas”; 

//////////

SELECT * FROM autor;
SELECT estudiante.nombre, estudiante.edad FROM estudiante;
SELECT e.nombre, e.apellido FROM estudiante as e WHERE e.carrera = "informática";
SELECT a.nombre FROM autor as a WHERE a.nacionalidad = "Francesa" OR a.nacionalidad = "Italiana";
SELECT l.area FROM libro as l WHERE l.area != "internet";
SELECT * FROM libro WHERE libro.editorial = "Salamandra";
SELECT * FROM estudiante WHERE estudiante.edad > ( SELECT AVG(estudiante.edad) FROM estudiante );
SELECT estudiante.nombre FROM estudiante WHERE estudiante.apellido LIKE "G%";
SELECT a.nombre FROM autor_has_libro INNER JOIN autor as a ON autor_has_libro.autor_idAutor = a.idAutor INNER JOIN libro ON autor_has_libro.libro_idLibro = libro.idLibro WHERE libro.titulo = "El Universo: Guía de viaje";
SELECT libro.titulo FROM prestamo INNER JOIN libro ON prestamo.libro_idLibro = libro.idLibro INNER JOIN estudiante ON prestamo.estudiante_idLector = estudiante.idLector WHERE estudiante.nombre = "Filippo" AND estudiante.apellido = "Galli";
SELECT e.nombre FROM estudiante as e WHERE e.edad IN (SELECT MIN(estudiante.edad) FROM estudiante);
SELECT e.nombre FROM prestamo INNER JOIN libro ON prestamo.libro_idLibro = libro.idLibro INNER JOIN estudiante as e ON prestamo.estudiante_idLector = e.idLector WHERE libro.area = "Base de Datos";
SELECT * FROM autor_has_libro INNER JOIN autor ON autor_has_libro.autor_idAutor = autor.idAutor INNER JOIN libro ON autor_has_libro.libro_idLibro = libro.idLibro WHERE autor.nombre = "J.K. Rowling";
SELECT l.titulo FROM prestamo INNER JOIN libro as l ON prestamo.libro_idLibro = l.idLibro WHERE prestamo.FechaDevolucion = "2021/07/16";

//////////////

CREATE TEMPORARY TABLE TWD AS 
SELECT e.title, e.rating, e.release_date, seasons.number FROM series INNER JOIN seasons ON series.id = seasons.serie_id 
INNER JOIN episodes as e ON e.season_id = seasons.id 
WHERE series.title = "The Walking Dead";

SELECT * FROM TWD WHERE number = 1;

CREATE INDEX movies_rating ON movies (rating);
SHOW INDEXES FROM movies;

//////////////

INSERT INTO genres (name, ranking) VALUES ("Genero nuevo", 13); 
INSERT INTO movies (title, rating, awards, release_date, length, genre_id) VALUES 
("El Conjuro", 8.6, 2, "2020-04-06", 120, 16);

UPDATE actors 
SET favorite_movie_id = 22
WHERE id = 12;

CREATE TEMPORARY TABLE copymovies AS 
SELECT * FROM movies;

SELECT * FROM copymovies;
DELETE FROM copymovies WHERE awards < 5;
SELECT * FROM copymovies;
SELECT g.* FROM genres as g INNER JOIN copymovies ON g.id = copymovies.genre_id; 
SELECT a.* FROM actors as a INNER JOIN actor_movie ON a.id = actor_movie.actor_id 
INNER JOIN copymovies ON actor_movie.movie_id = copymovies.id 
WHERE copymovies.awards > 3;
CREATE INDEX copymovies ON copymovies (title);
SHOW INDEXES FROM copymovies;
